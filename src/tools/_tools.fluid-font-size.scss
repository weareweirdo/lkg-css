///* ========================================================================
//   #FLUID FONT-SIZE
//   ========================================================================

// Set the viewport width at which font sizes will exactly match the provided
// pixel value. Our fluid typography calc() function will scale the font-size
// up or down based on viewport size and the $fluid-font-size-scale-rate.
$fluid-font-size-breakpoint: 3000px !default;

// Set the rate at which font sizes scale both up and down depending on
// viewport size.
$fluid-font-size-scale-rate: 0.85 !default;

// Enable or disable max boundaries
$fluid-font-size-max-boundaries: true !default;

@mixin inuit-fluid-font-size($font-size, $line-height: auto, $important: false) {

  @if (type-of($font-size) == number) {
    @if (unit($font-size) != "px") {
      @error "`#{$font-size}` needs to be a pixel value.";
    }
  } @else {
    @error "`#{$font-size}` needs to be a number.";
  }

  @if ($important == true) {
    $important: !important;
  } @elseif ($important == false) {
    $important: null;
  } @else {
    @error "`#{$important}` needs to be `true` or `false`."
  }

  // We provide a rem fallback for old browsers.
  font-size: ($font-size / $global-font-size) * 1rem $important;
  font-size: calc(#{$fluid-font-size-scale-rate * 1rem} + #{(($font-size -
             ($fluid-font-size-scale-rate * $global-font-size)) /
             $fluid-font-size-breakpoint) * 100vw}) $important;

  @if ($line-height == 'auto') {
    line-height: ceil($font-size / $global-line-height) *
                 ($global-line-height / $font-size) $important;
  } @else {
    @if (type-of($line-height) == number or $line-height == 'inherit' or
    $line-height == 'normal') {
      line-height: $line-height $important;
    } @elseif ($line-height != 'none' and $line-height != false) {
      @error "Dâ€™oh! `#{$line-height}` is not a valid value for `$line-height`."
    }
  }

  @if ($fluid-font-size-max-boundaries == true) {
    @media screen and (min-width: $fluid-font-size-breakpoint) {
      font-size: ($font-size / $global-font-size) * 1rem $important;
    }
  }
}
